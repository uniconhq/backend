"""Add PENDING_PUSH to TaskEvalStatus

Revision ID: f7fedf5618e7
Revises: 2dcebfab5acb
Create Date: 2025-04-24 03:36:58.577173

"""

from collections.abc import Sequence

from alembic import op
from alembic_postgresql_enum import TableReference

# revision identifiers, used by Alembic.
revision: str = "f7fedf5618e7"
down_revision: str | None = "2dcebfab5acb"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_task_result_job_id", "task_result", type_="unique")
    op.sync_enum_values(  # type: ignore[attr-defined]
        enum_schema="public",
        enum_name="taskevalstatus",
        new_values=["SUCCESS", "PENDING", "SKIPPED", "FAILED", "PENDING_PUSH"],
        affected_columns=[
            TableReference(table_schema="public", table_name="task_result", column_name="status")
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(  # type: ignore[attr-defined]
        enum_schema="public",
        enum_name="taskevalstatus",
        new_values=["SUCCESS", "PENDING", "SKIPPED", "FAILED"],
        affected_columns=[
            TableReference(table_schema="public", table_name="task_result", column_name="status")
        ],
        enum_values_to_rename=[],
    )
    op.create_unique_constraint("uq_task_result_job_id", "task_result", ["job_id"])
    # ### end Alembic commands ###
