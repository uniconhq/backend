name: deploy-nus-soc

on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-image:
    runs-on: ubuntu-latest

    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout 
        uses: actions/checkout@v4

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker image
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  upgrade-deployment:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Trigger `watchtower` update service
        id: watchtower-trigger
        run: |
          response=$(curl -s -w "\n%{http_code}" -H "Authorization: Bearer ${{ secrets.NUS_SOC_WATCHTOWER_AUTH_TOKEN }}" \
            "${{ secrets.NUS_SOC_WATCHTOWER_UPDATE_URL }}?image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }})"
          
          status_code=$(echo "$response" | tail -n1)
          response_body=$(echo "$response" | sed '$d')
          
          echo "Response body: $response_body"
          echo "Status code: $status_code"
          
          if [[ "$status_code" -ge 200 && "$status_code" -lt 300 ]]; then
            echo "Watchtower trigger successful"
            exit 0
          else
            echo "Watchtower trigger failed with status code: $status_code"
            exit 1
          fi 
